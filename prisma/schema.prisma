// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String?  @unique
  username    String
  authMethod  String   @map("authMethod") // "wallet" or "email"
  walletAddress String? @unique @map("walletAddress")
  passwordHash String? @map("passwordHash")
  createdAt   DateTime @default(now()) @map("createdAt")
  updatedAt   DateTime @updatedAt @map("updatedAt")
  
  // Relations
  games       Game[]
  leaderboard LeaderboardEntry?
  
  @@map("users")
}

model Game {
  id          String   @id @default(cuid())
  userId      String
  won         Boolean
  score       Int?
  gameData    String?  // JSON string for additional game data
  playedAt    DateTime @default(now())
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@map("games")
}

model LeaderboardEntry {
  id          String   @id @default(cuid())
  userId      String   @unique
  totalWins   Int      @default(0)
  totalGames  Int      @default(0)
  rank        Int?
  updatedAt   DateTime @updatedAt
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([totalWins])
  @@map("leaderboard")
}
